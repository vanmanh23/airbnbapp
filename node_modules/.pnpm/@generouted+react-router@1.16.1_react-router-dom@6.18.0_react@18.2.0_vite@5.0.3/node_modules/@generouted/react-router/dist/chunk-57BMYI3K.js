// src/client/hooks.ts
import { generatePath, useLocation, useNavigate, useParams } from "react-router-dom";
var hooks = () => {
  return {
    useParams: (path) => useParams(),
    useNavigate: () => {
      const navigate = useNavigate();
      return (to, ...[options]) => {
        if (typeof to === "number")
          return navigate(to);
        const path = generatePath(typeof to === "string" ? to : to.pathname, options?.params || {});
        navigate(typeof to === "string" ? path : { pathname: path, search: to.search, hash: to.hash }, options);
      };
    },
    useModals: () => {
      const location = useLocation();
      const navigate = useNavigate();
      return {
        current: location.state?.modal || "",
        open: (path, options) => {
          const { at, state, ...opts } = options || {};
          navigate(at || location.pathname, { ...opts, state: { ...location.state, ...state, modal: path } });
        },
        close: (options) => {
          const { at, state, ...opts } = options || {};
          navigate(at || location.pathname, { ...opts, state: { ...location.state, ...state, modal: "" } });
        }
      };
    }
  };
};

export {
  hooks
};
